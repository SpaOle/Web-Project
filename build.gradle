plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.5.0"
}

group = 'ee.mainor'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	implementation 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core:4.27.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	download = false
	// identify working directory in project
	//workDir = file("${project.projectDir}/ui_frontend/node")
	// NPM work directory
	npmWorkDir = file("${project.projectDir}/ui_frontend")
	// node modules directory
	//nodeModulesDir = file("${project.projectDir}/src/main/frontend-ui/demoapp")
}

task appNpmInstall(type: NpmTask){
	description = " read packge.json and install all jars"
	workingDir = file("${project.projectDir}/ui_frontend")
	args =["install"]
}
task appNpmBuild(type: NpmTask){
	description = "Builds applciation for your frontend "
	workingDir = file("${project.projectDir}/ui_frontend")
	args =["run", "build"]
}
task copyToFrontend(type: Copy){
	from "$projectDir/ui_frontend/out"
	into "$buildDir/resources/main/static"
}

